name: edit
synopsis: Edit a resource on the server
description: |-
  Edit a resource from the default editor.

  The edit command allows you to directly edit any API resource you can retrieve via the
  command line tools. It will open the editor defined by your KUBE_EDITOR, or EDITOR
  environment variables, or fall back to 'vi' for Linux or 'notepad' for Windows.
  You can edit multiple objects, although changes are applied one at a time. The command
  accepts filenames as well as command line arguments, although the files you point to must
  be previously saved versions of resources.

  The files to edit will be output in the default API version, or a version specified
  by --output-version. The default format is YAML - if you would like to edit in JSON
  pass -o json. The flag --windows-line-endings can be used to force Windows line endings,
  otherwise the default for your operating system will be used.

  In the event an error occurs while updating, a temporary file will be created on disk
  that contains your unapplied changes. The most common error when updating a resource
  is another editor changing the resource on the server. When this occurs, you will have
  to apply your changes to the newer version of the resource, or update your temporary
  saved copy to include the latest resource version.
options:
- name: filename
  shorthand: f
  default_value: '[]'
  usage: |
    Filename, directory, or URL to file to use to edit the resource
- name: output
  shorthand: o
  default_value: yaml
  usage: 'Output format. One of: yaml|json.'
- name: output-version
  usage: |
    Output the formatted object with the given group version (for ex: 'extensions/v1beta1').
- name: record
  default_value: "false"
  usage: Record current kubectl command in the resource annotation.
- name: save-config
  default_value: "false"
  usage: |
    If true, the configuration of current object will be saved in its annotation. This is useful when you want to perform kubectl apply on this object in the future.
- name: windows-line-endings
  default_value: "false"
  usage: Use Windows line-endings (default Unix line-endings)
inherited_options:
- name: alsologtostderr
  default_value: "false"
  usage: log to standard error as well as files
- name: api-version
  usage: |
    DEPRECATED: The API version to use when talking to the server
- name: certificate-authority
  usage: Path to a cert. file for the certificate authority.
- name: client-certificate
  usage: Path to a client certificate file for TLS.
- name: client-key
  usage: Path to a client key file for TLS.
- name: cluster
  usage: The name of the kubeconfig cluster to use
- name: context
  usage: The name of the kubeconfig context to use
- name: insecure-skip-tls-verify
  default_value: "false"
  usage: |
    If true, the server's certificate will not be checked for validity. This will make your HTTPS connections insecure.
- name: kubeconfig
  usage: Path to the kubeconfig file to use for CLI requests.
- name: log-backtrace-at
  default_value: :0
  usage: when logging hits line file:N, emit a stack trace
- name: log-dir
  usage: If non-empty, write log files in this directory
- name: log-flush-frequency
  default_value: 5s
  usage: Maximum number of seconds between log flushes
- name: logtostderr
  default_value: "true"
  usage: log to standard error instead of files
- name: match-server-version
  default_value: "false"
  usage: Require server version to match client version
- name: namespace
  usage: If present, the namespace scope for this CLI request.
- name: password
  usage: Password for basic authentication to the API server.
- name: server
  shorthand: s
  usage: The address and port of the Kubernetes API server
- name: stderrthreshold
  default_value: "2"
  usage: logs at or above this threshold go to stderr
- name: token
  usage: Bearer token for authentication to the API server.
- name: user
  usage: The name of the kubeconfig user to use
- name: username
  usage: Username for basic authentication to the API server.
- name: v
  default_value: "0"
  usage: log level for V logs
- name: vmodule
  usage: |
    comma-separated list of pattern=N settings for file-filtered logging
example: |2-
    # Edit the service named 'docker-registry':
    kubectl edit svc/docker-registry

    # Use an alternative editor
    KUBE_EDITOR="nano" kubectl edit svc/docker-registry

    # Edit the service 'docker-registry' in JSON using the v1 API format:
    kubectl edit svc/docker-registry --output-version=v1 -o json
see_also:
- kubectl
